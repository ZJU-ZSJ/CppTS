/*
** Xin YUAN, 2019, BSD (2)
*/

////////////////////////////////////////////////////////////////////////////////

#include "precomp.h"

#include "../WmarkIDs.h"

#include "tk_action.h"

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace CSL {
////////////////////////////////////////////////////////////////////////////////

// WmarkScannerTkAction

WmarkScannerTkAction::WmarkScannerTkAction() throw()
{
}
WmarkScannerTkAction::~WmarkScannerTkAction() throw()
{
}

// IRdScannerAction
bool WmarkScannerTkAction::Scan(std::istream& stm, RdActionStack& stk, uint32_t& uID, std::string& strToken)
{
	//get a character
	char ch;
	stm.get(ch);
	if( stm.eof() ) {
		uID = TK_END_OF_EVENT;
		return true;
	}
	if( !stm.good() )
		return false;
	//if( ch == '\r' )

	return true;
}

////////////////////////////////////////////////////////////////////////////////
}
////////////////////////////////////////////////////////////////////////////////
